
(function(){'use strict';
const main = ()=>document.getElementById('mainContent');
function qs(s){return document.querySelector(s);}
async function loadFragment(path, push=true){ try{ const r=await fetch(path); if(!r.ok) throw new Error('load failed'); const html=await r.text(); main().innerHTML=html; if(push){ const url = path==='/fragment/index' ? '/' : '/room/'+path.split('/').pop(); history.pushState({},'',url);} bindFragment(); }catch(e){ console.error(e); window.location.href = path==='/fragment/index' ? '/' : '/room/'+path.split('/').pop(); } }
function bindGlobal(){ qs('#notebookBtn')?.addEventListener('click', ()=>{ qs('#notes') && (qs('#notes').innerHTML = localStorage.getItem('detective_notes')||'<div>No notes yet.</div>'); qs('#notebook').classList.remove('hidden'); }); qs('#closeNotes')?.addEventListener('click', ()=> qs('#notebook').classList.add('hidden')); qs('#showLeader')?.addEventListener('click', ()=>{ const lb = JSON.parse(localStorage.getItem('detective_leaderboard')||'[]'); qs('#scores') && (qs('#scores').innerHTML = lb.length? lb.map(x=> '<li>'+x.name+' â€” '+Math.floor(x.time/60)+'m '+(x.time%60)+'s</li>').join('') : '<li>No scores</li>'); qs('#leaderModal').classList.remove('hidden'); }); qs('#closeLeader')?.addEventListener('click', ()=> qs('#leaderModal').classList.add('hidden')); const playBtn = qs('#playBtn'), muteBtn = qs('#muteBtn'); const audTheme=qs('#aud_theme'), audTension=qs('#aud_tension'), audVictory=qs('#aud_victory'); let playing=false; function ensurePlay(a){ try{ a.play().catch(()=>{});}catch(e){} } function fade(a,t){ if(!a) return; try{ if(a.paused) a.play().catch(()=>{});}catch(e){} const start=a.volume||0; const steps=12; for(let i=1;i<=steps;i++){ setTimeout(()=> a.volume = Math.max(0, Math.min(1, start + (t-start)*(i/steps))), i*40); } } function setMusic(room){ const idx = parseInt((room||'room1').replace('room',''))||1; if(idx<=4){ fade(audTheme,0.7); fade(audTension,0); fade(audVictory,0);} else if(idx<=8){ fade(audTheme,0.15); fade(audTension,0.6); fade(audVictory,0);} else { fade(audTheme,0); fade(audTension,0.4); fade(audVictory,0.6);} } if(playBtn) playBtn.addEventListener('click', ()=>{ if(!playing){ [audTheme,audTension,audVictory].forEach(ensurePlay); playBtn.textContent='Pause'; playing=true; const roomInput = document.querySelector('input[name="room"]'); setMusic(roomInput?roomInput.value:'room1'); } else { [audTheme,audTension,audVictory].forEach(a=> fade(a,0)); playBtn.textContent='Play'; playing=false; } }); if(muteBtn) muteBtn.addEventListener('click', ()=>{ if(!audTheme) return; const nm = !audTheme.muted; [audTheme,audTension,audVictory].forEach(a=> a.muted = nm); muteBtn.textContent = nm ? 'Muted' : 'Mute'; }); }
function bindFragment(){ main().querySelectorAll('a[data-nav]').forEach(a=>{ a.onclick = (ev)=>{ ev.preventDefault(); const href = a.getAttribute('href'); if(href && href.startsWith('/room/')) loadFragment('/fragment/'+href.split('/').pop()); else if(href === '/') loadFragment('/fragment/index'); else window.location.href = href; }; }); main().querySelectorAll('form[data-ajax-form]').forEach(f=>{ f.onsubmit = async (ev)=>{ ev.preventDefault(); const fd = new FormData(f); try{ const resp = await fetch(f.action, {method:'POST', body:fd}); if(!resp.ok){ alert('Submit failed'); return; } const html = await resp.text(); main().innerHTML = html; bindFragment(); }catch(e){ alert('Submission error'); } }; }); const hintBtn = main().querySelector('#hintBtn'); if(hintBtn) hintBtn.addEventListener('click', async ()=>{ const roomInput = main().querySelector('input[name="room"]'); if(!roomInput){ alert('No room context'); return; } const lvl = parseInt(prompt('Hint level (1 gentle,2 direct). Costs 1 coin. Enter 1-2:'))||0; if(lvl<1||lvl>2) return; try{ const r = await fetch('/use_hint', {method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({room:roomInput.value, level:lvl})}); const dj = await r.json(); if(!r.ok){ alert('Hint unavailable: '+(dj.error||'')); return; } const hints = {'room2':['Shift letters back by 6; look at the first word.','Think what proves a case.'],'room9':['Broken Glass->Physical; Email->Digital; Note->Logic.','Sorting reveals a 4-digit code.'],'room10':['Use initials from solved clues to form a word.','Try arranging them sensibly.'],'room12':['Consider who benefits; name the scheme.','Who had motive and access?']}; const texts = hints[roomInput.value]||['No hint.']; const text = texts[Math.min(lvl-1, texts.length-1)]; localStorage.setItem('detective_notes', JSON.stringify((JSON.parse(localStorage.getItem('detective_notes')||'[]')).concat([{text:'Hint L'+lvl+' for '+roomInput.value+': '+text, when:new Date().toISOString()}]))); alert('Hint: '+text+'\nCoins left: '+dj.coins); qs('#coinCount') && (qs('#coinCount').textContent = dj.coins); }catch(e){ alert('Hint failed'); } }); const roomInput = main().querySelector('input[name="room"]'); if(roomInput){ window.dispatchEvent(new CustomEvent('room-change',{detail:{room:roomInput.value}})); } const saveBtn = main().querySelector('#saveScore'); if(saveBtn) saveBtn.addEventListener('click', ()=>{ const st = parseInt(localStorage.getItem('detective_started')||0); const elapsed = st ? Math.floor((Date.now()-st)/1000) : 0; const name = prompt('Detective name (short)') || 'Anon'; const lb = JSON.parse(localStorage.getItem('detective_leaderboard')||'[]'); lb.push({name:name, time:elapsed, when:new Date().toISOString()}); lb.sort((a,b)=>a.time-b.time); localStorage.setItem('detective_leaderboard', JSON.stringify(lb.slice(0,20))); alert('Saved locally.'); } ); const answerInput = main().querySelector('input[name="answer"]'); if(answerInput){ answerInput.focus(); setTimeout(()=> answerInput.blur(), 800); } }
document.addEventListener('DOMContentLoaded', ()=>{ // initial load
 bindGlobal();
 const p = location.pathname; if(p === '/' || p === '') loadFragment('/fragment/index', false); else if(p.startsWith('/room/')) loadFragment('/fragment/'+p.split('/').pop(), false); else loadFragment('/fragment/index', false); // start simple timer
 if(!localStorage.getItem('detective_started')) localStorage.setItem('detective_started', Date.now()); setInterval(()=>{ const st = parseInt(localStorage.getItem('detective_started')||0); const el = document.getElementById('timer'); if(el) el.textContent = (function(s){ const mm = String(Math.floor(s/60)).padStart(2,'0'); const ss = String(s%60).padStart(2,'0'); return mm+':'+ss; })(st?Math.floor((Date.now()-st)/1000):0); },1000); // music bridge
 window.addEventListener('room-change', (e)=>{ const playBtn = qs('#playBtn'); if(playBtn && playBtn.textContent === 'Pause'){ playBtn.click(); playBtn.click(); } }); });
})();